{"version":3,"sources":["components/ProtectedRoute/index.js","components/LoginForm/index.js","components/Header/index.js","components/Footer/index.js","components/CarouselImages/index.js","components/Carousel/index.js","components/RestaurantCard/index.js","components/AllRestaurant/index.js","components/Home/index.js","components/Counter/index.js","components/CartItems/index.js","components/Payment/index.js","components/Cart/index.js","components/RestaurantMenuBanner/index.js","components/RestaurantMenuList/index.js","components/RestaurantMenu/index.js","components/NotFound/index.js","components/OrderedItems/index.js","components/NoOrders/index.js","components/Account/index.js","App.js","index.js"],"names":["ProtectedRoute","props","undefined","Cookies","get","to","LoginForm","state","username","password","showLoginError","errorMessage","onSubmitSuccess","jwtToken","userDetails","history","set","expires","path","localStorage","setItem","JSON","stringify","replace","onSubmitFailure","error","setState","onSubmitLoginDetails","event","a","preventDefault","options","method","body","fetch","response","json","data","ok","jwt_token","error_msg","onChangeUsername","target","value","onChangePassword","this","className","src","alt","onSubmit","htmlFor","placeholder","type","id","onChange","Component","Header","showMenu","componentDidMount","window","location","pathname","onClickLogout","remove","removeItem","showHamburgerMenu","renderMobileView","onClick","size","renderDesktopView","isSelectedHome","isSelectedCart","isSelectedAccount","e","close","withRouter","Footer","testid","CarouselImages","imageUrl","apiStatusConstants","ReactSlider","carouselList","apiStatus","getCarouselData","headers","Authorization","fetchedData","updatedData","offers","map","carousel","image_url","renderCarouselSuccess","dots","infinite","autoplay","eachCarousel","renderFailureView","renderLoadingView","style","width","height","color","renderCarouselPage","RestaurantCard","details","name","cuisine","rating","totalReviews","sortByOptions","displayText","AllRestaurant","allRestaurantList","activePage","totalPages","searchInput","activeSortId","getAllrestaurantDetails","offset","LIMIT","apiUrl","restaurants","eachObject","costForTwo","cost_for_two","groupByTime","group_by_time","hasOnlineDelivery","has_online_delivery","hasTableBooking","has_table_booking","isDeliveringNow","is_delivering_now","menuType","menu_type","opensAt","opens_at","user_rating","ratingColor","rating_color","ratingText","rating_text","total_reviews","Math","ceil","total","renderSearchInput","onChangeSearchInput","onKeyDown","onEnterSearchInput","onCleckSearchButton","key","onChangeActiveId","reDirectToHome","renderAllrestaurant","eachRest","navgateToPrevPage","navgateToNextPage","prevState","renderAllRestaurantPage","defaultValue","Home","getCartlistFromLocalStorage","parse","getItem","Counter","cartItemsList","quantity","itemDetails","eachItem","updateCartAmount","updateCartValue","updateCartList","updateCartListState","newList","filter","itemQuantityToUpdate","updateItemQuantity","onClickDeleteQuantity","onClickIncreaseQuantity","CartItems","cost","Payment","getCartValue","localStorageCartList","length","costOfItems","sum","forEach","x","Cart","orderTotal","displayPayment","addCartListToLocalStorage","updatedCartList","clearCart","updateOrderListWithDate","format","Date","toString","previousOrder","updatedPreviousOrderList","isCartEmpty","RestaurantMenuBanner","restaurantDetails","reviewsCount","userReviewCount","round","RestaurantMenuList","cartList","addItemTocart","onClickAddToCart","isItemInCart","RestaurantMenu","foodItems","getRestaurantMenu","match","params","itemsCount","items_count","reviews_count","food_items","foodType","food_type","newItem","renderRestaurantDetailsMenu","renderRestaurantDetails","NotFound","OrderedItems","NoOrders","userDetailsFromLS","pastOrdersFromLS","reverse","userSavedAddressFromLs","address","Account","pastOrders","editAddress","onClickEditAddress","onChangeUserAddress","saveUserAddressToLs","updateAddress","onSaveUserAddress","editUserAddress","rows","cols","eachOrder","totalCartCost","uuidV4","eachOrderItem","exact","component","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.ff0737f8.chunk.js","sourcesContent":["import {Redirect, Route} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookies.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\n\nimport './index.css'\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    showLoginError: false,\n    errorMessage: '',\n  }\n\n  onSubmitSuccess = (jwtToken, userDetails) => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    localStorage.setItem('userDetails', JSON.stringify(userDetails))\n    history.replace('/')\n  }\n\n  onSubmitFailure = error => {\n    this.setState({errorMessage: error, showLoginError: true})\n  }\n\n  onSubmitLoginDetails = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token, userDetails)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  render() {\n    const {password, username, showLoginError, errorMessage} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"user-login-form-container\">\n        <div className=\"landing-image-container\">\n          <img\n            src=\"https://res.cloudinary.com/hariy/image/upload/v1642577455/TastyKitchen/Rectangle_1456_vxi82x.png\"\n            alt=\"website login\"\n            className=\"login-desktop-landing-image\"\n          />\n        </div>\n        <div className=\"login-form-container\">\n          <form\n            className=\"login-form-sub-container\"\n            onSubmit={this.onSubmitLoginDetails}\n          >\n            <img\n              src=\"https://res.cloudinary.com/hariy/image/upload/v1642622290/TastyKitchen/Vector_1_i2n5wd.png\"\n              alt=\"website logo\"\n              className=\"website-logo\"\n            />\n            <h1 className=\"app-title\">Tasty Kitchens</h1>\n            <h1 className=\"login-heading\">Login</h1>\n            <div className=\"login-user-field-container\">\n              <label htmlFor=\"username\" className=\"login-input-label\">\n                USERNAME\n              </label>\n              <input\n                placeholder=\"Username\"\n                type=\"text\"\n                id=\"username\"\n                className=\"input-field\"\n                onChange={this.onChangeUsername}\n                value={username}\n              />\n            </div>\n            <div className=\"login-password-field-container\">\n              <label htmlFor=\"userpassword\" className=\"login-input-label\">\n                PASSWORD\n              </label>\n              <input\n                placeholder=\"Password\"\n                type=\"password\"\n                id=\"userpassword\"\n                className=\"input-field\"\n                onChange={this.onChangePassword}\n                value={password}\n              />\n            </div>\n            <button type=\"submit\" className=\"login-submit-button\">\n              Login\n            </button>\n            {showLoginError && (\n              <p className=\"login-error-message\">{errorMessage}</p>\n            )}\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LoginForm\n","import {Component} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport {GiHamburgerMenu} from 'react-icons/gi'\nimport {RiCloseFill} from 'react-icons/ri'\nimport Cookies from 'js-cookie'\n\nimport 'reactjs-popup/dist/index.css'\nimport './index.css'\n\nclass Header extends Component {\n  state = {path: '/', showMenu: false}\n\n  componentDidMount = () => {\n    this.setState({\n      path: window.location.pathname,\n    })\n  }\n\n  onClickLogout = () => {\n    const {history} = this.props\n    Cookies.remove('jwt_token')\n    localStorage.removeItem('userDetails')\n    history.replace('/login')\n  }\n\n  showHamburgerMenu = () => {\n    const {showMenu} = this.state\n    this.setState({showMenu: !showMenu})\n  }\n\n  close(e) {\n    const {showMenu} = this.state\n    e.preventDefault()\n    this.setState({showMenu: !showMenu})\n  }\n\n  renderMobileView = () => (\n    <div>\n      <button\n        type=\"button\"\n        className=\"mobile-menu-button\"\n        onClick={this.showHamburgerMenu}\n      >\n        <GiHamburgerMenu size={20} />\n      </button>\n    </div>\n  )\n\n  renderDesktopView = () => {\n    const {path} = this.state\n    let isSelectedHome = null\n    let isSelectedCart = null\n    let isSelectedAccount = null\n\n    if (path === '/') {\n      isSelectedHome = 'selected'\n    } else {\n      isSelectedHome = ''\n    }\n\n    if (path === '/cart') {\n      isSelectedCart = 'selected'\n    } else {\n      isSelectedCart = ''\n    }\n\n    if (path === '/account') {\n      isSelectedAccount = 'selected'\n    } else {\n      isSelectedAccount = ''\n    }\n\n    return (\n      <div className=\"desktop-menu-container\">\n        <ul className=\"unordered-list-desktop\">\n          <li className=\"list-items\">\n            <Link\n              to=\"/\"\n              className={`${isSelectedHome} desktop-nav-menu-item link`}\n            >\n              Home\n            </Link>\n          </li>\n          <li className=\"list-items\">\n            <Link\n              to=\"/cart\"\n              className={`${isSelectedCart} desktop-nav-menu-item link`}\n            >\n              Cart\n            </Link>\n          </li>\n          <li className=\"list-items\">\n            <Link\n              to=\"/account\"\n              className={`${isSelectedAccount} desktop-nav-menu-item link`}\n            >\n              Account\n            </Link>\n          </li>\n          <li className=\"list-items\">\n            <button\n              type=\"button\"\n              className=\"logout-button\"\n              onClick={this.onClickLogout}\n            >\n              Logout\n            </button>\n          </li>\n        </ul>\n      </div>\n    )\n  }\n\n  render() {\n    const {path, showMenu} = this.state\n    let isSelectedHome = null\n    let isSelectedCart = null\n    let isSelectedAccount = null\n    if (path === '/') {\n      isSelectedHome = 'selected'\n    } else {\n      isSelectedHome = ''\n    }\n\n    if (path === '/cart') {\n      isSelectedCart = 'selected'\n    } else {\n      isSelectedCart = ''\n    }\n\n    if (path === '/account') {\n      isSelectedAccount = 'selected'\n    } else {\n      isSelectedAccount = ''\n    }\n\n    return (\n      <nav className=\"nav-container\">\n        <div className=\"web-nav-container\">\n          <Link to=\"/\" className=\"nav-web-home-anchor-container\">\n            <img\n              src=\"https://res.cloudinary.com/hariy/image/upload/v1642622290/TastyKitchen/Vector_1_i2n5wd.png\"\n              alt=\"website logo\"\n            />\n            <p className=\"website-title\">Tasty Kitchens</p>\n          </Link>\n          <div className=\"mobile-nav-menu\">{this.renderMobileView()}</div>\n          <div className=\"desktop-nav-menu\">{this.renderDesktopView()}</div>\n        </div>\n        <div\n          className={`mobile-pop-up-container ${showMenu ? 'expand-menu' : ''}`}\n        >\n          <ul className=\"unordered-list mobile-menu\">\n            <li className=\"list-items\">\n              <Link\n                to=\"/\"\n                className={`${isSelectedHome} desktop-nav-menu-item link`}\n              >\n                Home\n              </Link>\n            </li>\n            <li className=\"list-items\">\n              <Link\n                to=\"/cart\"\n                className={`${isSelectedCart} desktop-nav-menu-item link`}\n              >\n                Cart\n              </Link>\n            </li>\n            <li className=\"list-items\">\n              <Link\n                to=\"/account\"\n                className={`${isSelectedAccount} desktop-nav-menu-item link`}\n              >\n                Account\n              </Link>\n            </li>\n            <li className=\"list-items\">\n              <button\n                type=\"button\"\n                className=\"mobile-logout-button desktop-nav-menu-item\"\n                onClick={this.onClickLogout}\n              >\n                Logout\n              </button>\n            </li>\n          </ul>\n          <button\n            className=\"mobile-menu-close-button\"\n            type=\"button\"\n            onClick={e => this.close(e)}\n          >\n            <RiCloseFill />\n          </button>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import {\n  FaPinterestSquare,\n  FaInstagram,\n  FaTwitter,\n  FaFacebookSquare,\n} from 'react-icons/fa'\n\nimport './index.css'\n\nexport default function Footer() {\n  return (\n    <div className=\"footer-container\">\n      <div className=\"footer-sub-container\">\n        <div className=\"footer-title-container\">\n          <img\n            className=\"footer-website-logo\"\n            src=\"https://res.cloudinary.com/hariy/image/upload/v1642747222/TastyKitchen/Vector_2_wfbmrn.png\"\n            alt=\"website-footer-logo\"\n          />\n          <h1 className=\"footer-website-title\">Tasty Kitchens</h1>\n        </div>\n        <p className=\"footer-desc\">\n          The only thing we are serious about is food. Contact us on\n        </p>\n        <div className=\"footer-social-container\">\n          <FaPinterestSquare\n            testid=\"pintrest-social-icon\"\n            className=\"footer-social-icon\"\n          />\n          <FaInstagram\n            testid=\"instagram-social-icon\"\n            className=\"footer-social-icon\"\n          />\n          <FaTwitter\n            testid=\"twitter-social-icon\"\n            className=\"footer-social-icon\"\n          />\n          <FaFacebookSquare\n            testid=\"facebook-social-icon\"\n            className=\"footer-social-icon\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import './index.css'\n\nconst CarouselImages = props => {\n  const {imageUrl} = props\n  return <img src={imageUrl} alt=\"offer\" className=\"carousel-image\" />\n}\n\nexport default CarouselImages\n","import {Component} from 'react'\nimport Slider from 'react-slick'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\n\nimport CarouselImages from '../CarouselImages'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nexport default class ReactSlider extends Component {\n  state = {carouselList: [], apiStatus: apiStatusConstants.initial}\n\n  componentDidMount = () => {\n    this.getCarouselData()\n  }\n\n  getCarouselData = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      headers: {Authorization: `Bearer ${jwtToken}`},\n      method: 'GET',\n    }\n    const url = 'https://apis.ccbp.in/restaurants-list/offers'\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const fetchedData = await response.json()\n      const updatedData = fetchedData.offers.map(carousel => ({\n        id: carousel.id,\n        imageUrl: carousel.image_url,\n      }))\n      this.setState({\n        apiStatus: apiStatusConstants.success,\n        carouselList: updatedData,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderCarouselSuccess = () => {\n    const {carouselList} = this.state\n    const settings = {\n      dots: true,\n      infinite: true,\n      autoplay: true,\n    }\n    return (\n      <div className=\"container\">\n        <Slider {...settings}>\n          {carouselList.map(eachCarousel => (\n            <CarouselImages\n              key={eachCarousel.id}\n              imageUrl={eachCarousel.imageUrl}\n            />\n          ))}\n        </Slider>\n      </div>\n    )\n  }\n\n  renderFailureView = () => <h1>dsf</h1>\n\n  renderLoadingView = () => (\n    <div\n      className=\"products-loader-container loader\"\n      style={{width: '100%', height: '180px'}}\n      testid=\"restaurants-offers-loader\"\n    >\n      <Loader type=\"Oval\" color=\"#f7931e\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderCarouselPage = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderCarouselSuccess()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <div className=\"carousel-container\">{this.renderCarouselPage()}</div>\n  }\n}\n","import {AiFillStar} from 'react-icons/ai'\nimport {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst RestaurantCard = props => {\n  const {details} = props\n  return (\n    <li className=\"all-rest-li\" testid=\"restaurant-item\">\n      <Link className=\"all-rest-link-detail\" to={`/restaurant/${details.id}`}>\n        <img\n          src={details.imageUrl}\n          alt=\"restaurant\"\n          className=\"all-rest-image\"\n        />\n        <div className=\"all-rest-details-cont\">\n          <h1 className=\"all-rest-title\">{details.name}</h1>\n          <p className=\"all-rest-type\">{details.cuisine}</p>\n          <div className=\"all-rest-rating-cont\">\n            <AiFillStar className=\"all-rest-rating-icon\" />\n            <p className=\"all-rest-rating\">{details.rating}</p>\n            <p className=\"all-rest-user-rating\">{`(${details.totalReviews}) ratings`}</p>\n          </div>\n        </div>\n      </Link>\n    </li>\n  )\n}\n\nexport default RestaurantCard\n","import {Component} from 'react'\nimport {BsFilterRight} from 'react-icons/bs'\nimport {MdNavigateNext, MdNavigateBefore} from 'react-icons/md'\nimport {BiSearch} from 'react-icons/bi'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport RestaurantCard from '../RestaurantCard'\nimport './index.css'\n\nconst sortByOptions = [\n  {\n    id: 0,\n    displayText: 'Highest',\n    value: 'Highest',\n  },\n  {\n    id: 2,\n    displayText: 'Lowest',\n    value: 'Lowest',\n  },\n]\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass AllRestaurant extends Component {\n  state = {\n    apiStatus: apiStatusConstants.initial,\n    allRestaurantList: [],\n    activePage: 1,\n    totalPages: 1,\n    searchInput: '',\n    activeSortId: sortByOptions[1].value,\n  }\n\n  componentDidMount = () => {\n    this.getAllrestaurantDetails()\n  }\n\n  getAllrestaurantDetails = async () => {\n    const {activePage, searchInput, activeSortId} = this.state\n    const LIMIT = 9\n    const offset = (activePage - 1) * LIMIT\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = `https://apis.ccbp.in/restaurants-list?sort_by_rating=${activeSortId}&search=${searchInput}&offset=${offset}&limit=${LIMIT}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    if (response.ok) {\n      const fetchedData = await response.json()\n      const updatedData = fetchedData.restaurants.map(eachObject => ({\n        costForTwo: eachObject.cost_for_two,\n        cuisine: eachObject.cuisine,\n        groupByTime: eachObject.group_by_time,\n        hasOnlineDelivery: eachObject.has_online_delivery,\n        hasTableBooking: eachObject.has_table_booking,\n        id: eachObject.id,\n        imageUrl: eachObject.image_url,\n        isDeliveringNow: eachObject.is_delivering_now,\n        location: eachObject.location,\n        menuType: eachObject.menu_type,\n        name: eachObject.name,\n        opensAt: eachObject.opens_at,\n        rating: eachObject.user_rating.rating,\n        ratingColor: eachObject.user_rating.rating_color,\n        ratingText: eachObject.user_rating.rating_text,\n        totalReviews: eachObject.user_rating.total_reviews,\n      }))\n      const totalPages = Math.ceil(fetchedData.total / LIMIT)\n      this.setState({\n        apiStatus: apiStatusConstants.success,\n        allRestaurantList: updatedData,\n        totalPages,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderSearchInput = () => {\n    const {searchInput} = this.state\n\n    return (\n      <div className=\"all-rest-input-container\">\n        <input\n          type=\"search\"\n          value={searchInput}\n          placeholder=\"Search\"\n          onChange={this.onChangeSearchInput}\n          onKeyDown={this.onEnterSearchInput}\n          className=\"all-rest-search-input\"\n        />\n        <button\n          onClick={this.onCleckSearchButton}\n          className=\"all-rest-search-button\"\n          type=\"button\"\n        >\n          <BiSearch />\n        </button>\n      </div>\n    )\n  }\n\n  onCleckSearchButton = () => {\n    this.getAllrestaurantDetails()\n  }\n\n  onChangeSearchInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  onEnterSearchInput = event => {\n    if (event.key === 'Enter') {\n      this.getAllrestaurantDetails()\n    }\n  }\n\n  onChangeActiveId = event => {\n    this.setState(\n      {\n        activeSortId: event.target.value,\n        allRestaurantList: [],\n        activePage: 1,\n        totalPages: 1,\n        searchInput: '',\n      },\n      this.getAllrestaurantDetails,\n    )\n  }\n\n  reDirectToHome = () => {\n    this.setState(\n      {\n        apiStatus: apiStatusConstants.initial,\n        allRestaurantList: [],\n        activePage: 1,\n        totalPages: 1,\n        searchInput: '',\n      },\n      this.getAllrestaurantDetails,\n    )\n  }\n\n  renderAllrestaurant = () => {\n    const {allRestaurantList, activePage, totalPages} = this.state\n    return (\n      <>\n        <ul className=\"all-rest-ul\">\n          {allRestaurantList.map(eachRest => (\n            <RestaurantCard key={eachRest.id} details={eachRest} />\n          ))}\n        </ul>\n        <div className=\"all-rest-button-cont\">\n          <button\n            type=\"button\"\n            testid=\"pagination-left-button\"\n            className=\"all-rest-page-button\"\n            onClick={this.navgateToPrevPage}\n          >\n            <MdNavigateBefore className=\"navigate-page-icon\" />\n          </button>\n          <p className=\"all-rest-page-desc\">\n            <span testid=\"active-page-number\">{activePage}</span> of{' '}\n            <span testid=\"total-page-numbers\">{totalPages}</span>\n          </p>\n          <button\n            type=\"button\"\n            testid=\"pagination-right-button\"\n            className=\"all-rest-page-button\"\n            onClick={this.navgateToNextPage}\n          >\n            <MdNavigateNext className=\"navigate-page-icon\" />\n          </button>\n        </div>\n      </>\n    )\n  }\n\n  navgateToPrevPage = () => {\n    const {activePage, totalPages} = this.state\n\n    if (activePage <= totalPages && activePage > 1) {\n      this.setState(\n        prevState => ({activePage: prevState.activePage - 1}),\n        this.getAllrestaurantDetails,\n      )\n    }\n  }\n\n  navgateToNextPage = () => {\n    const {activePage, totalPages} = this.state\n\n    if (activePage < totalPages) {\n      this.setState({activePage: activePage + 1}, this.getAllrestaurantDetails)\n    }\n  }\n\n  renderFailureView = () => (\n    <div className=\"all-rest-failure-container\">\n      <img\n        src=\"https://res.cloudinary.com/hariy/image/upload/v1642997774/TastyKitchen/cooking_1_lpi3li.png\"\n        alt=\"not-found\"\n      />\n      <div className=\"rest-empty-cart-desc-container\">\n        <h1 className=\"rest-empty-cart-title\">No Restaurant Found!</h1>\n        <p className=\"rest-empty-cart-desc\">Search for other restaurants</p>\n        <button\n          onClick={this.reDirectToHome}\n          className=\"all-rest-not-found-button\"\n          type=\"button\"\n        >\n          Clear\n        </button>\n      </div>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div\n      style={{width: '100%', height: '280px'}}\n      className=\"products-loader-container loader\"\n      testid=\"restaurants-list-loader\"\n    >\n      <Loader type=\"Oval\" color=\"#f7931e\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderAllRestaurantPage = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderAllrestaurant()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const {activeSortId} = this.state\n\n    return (\n      <div className=\"allvideos-container\">\n        <div className=\"allvideos-sub-container\">\n          <div className=\"allvideos-header-container\">\n            <div className=\"all-rest-desc-container\">\n              <h1 className=\"allvideos-title\">Popular Restaurants</h1>\n              <p className=\"allvideos-desc\">\n                Select Your favourite restaurant special dish and make your day\n                happy...\n              </p>\n            </div>\n            <div className=\"allvideos-filter-container\">\n              <div className=\"all-rest-desktop-search-container\">\n                {this.renderSearchInput()}\n              </div>\n              <div className=\"allvideos-sort-container\">\n                <BsFilterRight className=\"filter-icon\" />\n                <p className=\"sort-by-label\">Sort by</p>\n                <select\n                  onChange={this.onChangeActiveId}\n                  value={activeSortId}\n                  className=\"sort-by-select\"\n                >\n                  {sortByOptions.map(eachObject => (\n                    <option\n                      key={eachObject.id}\n                      defaultValue={eachObject.value}\n                      className=\"select-option\"\n                    >\n                      {eachObject.displayText}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n          <hr className=\"hr-line-desktop\" />\n          {this.renderAllRestaurantPage()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AllRestaurant\n","import {Component} from 'react'\nimport Header from '../Header'\nimport Footer from '../Footer'\nimport ReactSlider from '../Carousel'\nimport AllRestaurant from '../AllRestaurant'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div testid=\"home\">\n        <Header />\n        <ReactSlider />\n        <AllRestaurant />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import {Component} from 'react'\nimport {AiOutlineMinus, AiOutlinePlus} from 'react-icons/ai'\n\nimport './index.css'\n\nconst getCartlistFromLocalStorage = () => {\n  const localStorageCartList =\n    JSON.parse(localStorage.getItem('cartData')) === null\n      ? []\n      : JSON.parse(localStorage.getItem('cartData'))\n  return localStorageCartList\n}\n\nclass Counter extends Component {\n  state = {cartItemsList: getCartlistFromLocalStorage(), quantity: 0}\n\n  componentDidMount = () => {\n    const {cartItemsList} = this.state\n    const {itemDetails} = this.props\n    cartItemsList.map(eachItem => {\n      if (eachItem.id === itemDetails.id) {\n        return this.setState({quantity: eachItem.quantity})\n      }\n      return 0\n    })\n  }\n\n  updateCartAmount = () => {\n    const {updateCartValue} = this.props\n    updateCartValue()\n  }\n\n  updateCartList = () => {\n    const {quantity, cartItemsList} = this.state\n    const {itemDetails, updateCartListState} = this.props\n    const newList = cartItemsList.filter(\n      eachItem => eachItem.id !== itemDetails.id,\n    )\n    const itemQuantityToUpdate = cartItemsList.filter(\n      eachItem => eachItem.id === itemDetails.id,\n    )\n    const updateItemQuantity = {...itemQuantityToUpdate[0], quantity}\n    const updatedCartList =\n      updateItemQuantity.quantity === 0\n        ? [...newList]\n        : [...newList, updateItemQuantity]\n    updateCartListState(updatedCartList)\n    this.updateCartAmount()\n  }\n\n  onClickDeleteQuantity = () => {\n    this.setState(\n      prevState => ({\n        quantity: prevState.quantity - 1,\n        cartItemsList: getCartlistFromLocalStorage(),\n      }),\n      this.updateCartList,\n    )\n  }\n\n  onClickIncreaseQuantity = () => {\n    this.setState(\n      prevState => ({quantity: prevState.quantity + 1}),\n      this.updateCartList,\n    )\n  }\n\n  render() {\n    const {quantity} = this.state\n    return (\n      <div>\n        <button\n          onClick={this.onClickDeleteQuantity}\n          type=\"button\"\n          className=\"cart-items-li-button\"\n          testid=\"decrement-quantity\"\n        >\n          <AiOutlineMinus className=\"cart-items-li-button-icons\" />\n        </button>\n        <span testid=\"item-quantity\" className=\"cart-items-li-quantity\">\n          {quantity}\n        </span>\n        <button\n          onClick={this.onClickIncreaseQuantity}\n          type=\"button\"\n          className=\"cart-items-li-button\"\n          testid=\"increment-quantity\"\n        >\n          <AiOutlinePlus className=\"cart-items-li-button-icons\" />\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Counter\n","import Counter from '../Counter'\n\nimport './index.css'\n\nconst CartItems = props => {\n  const {updateCartValue, itemDetails, updateCartListState} = props\n\n  return (\n    <li className=\"cart-items-desktop-li\">\n      <img\n        alt=\"cart-item\"\n        src={itemDetails.imageUrl}\n        className=\"cart-items-desktop-li-image\"\n      />\n      <div className=\"cart-items-desktop-img-title-container\">\n        <p className=\"cart-items-desktop-li-title\">{itemDetails.name}</p>\n        <Counter\n          itemDetails={itemDetails}\n          updateCartListState={updateCartListState}\n          updateCartValue={updateCartValue}\n        />\n        <p className=\"cart-items-li-cost\" testid=\"total-price\">\n          ₹ {`${itemDetails.cost * itemDetails.quantity}`}.00\n        </p>\n      </div>\n    </li>\n  )\n}\n\nexport default CartItems\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst Payment = () => (\n  <>\n    <div className=\"payment-container\">\n      <img\n        src=\"https://res.cloudinary.com/tastykitchen/image/upload/v1635267607/Vectorpayment_nwd9el.png\"\n        alt=\"success\"\n        className=\"payment-success-image\"\n      />\n      <h1 className=\"payment-heading\">Payment Successful</h1>\n      <p className=\"payment-description\">\n        Thank you for ordering Your payment is successfully completed.\n      </p>\n\n      <Link to=\"/\">\n        <button className=\"payment-go-to-home-button\" type=\"button\">\n          Go To Home Page\n        </button>\n      </Link>\n    </div>\n  </>\n)\n\nexport default Payment\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport {format} from 'date-fns'\nimport Header from '../Header'\nimport CartItems from '../CartItems'\nimport Payment from '../Payment'\nimport Footer from '../Footer'\n\nimport './index.css'\n\nconst getCartlistFromLocalStorage = () => {\n  const localStorageCartList =\n    JSON.parse(localStorage.getItem('cartData')) === null\n      ? []\n      : JSON.parse(localStorage.getItem('cartData'))\n  return localStorageCartList\n}\n\nconst getCartValue = () => {\n  const localStorageCartList = getCartlistFromLocalStorage()\n  if (localStorageCartList.length > 0) {\n    const costOfItems = localStorageCartList.map(\n      eachItem => eachItem.cost * eachItem.quantity,\n    )\n    let sum = 0\n    costOfItems.forEach(x => {\n      sum += x\n    })\n    return sum\n  }\n  return 0\n}\n\nclass Cart extends Component {\n  state = {\n    cartItemsList: getCartlistFromLocalStorage(),\n    orderTotal: getCartValue(),\n    displayPayment: false,\n  }\n\n  addCartListToLocalStorage = () => {\n    const {cartItemsList} = this.state\n    localStorage.setItem('cartData', JSON.stringify(cartItemsList))\n    this.setState({orderTotal: getCartValue()})\n  }\n\n  updateCartListState = updatedCartList => {\n    this.setState(\n      {cartItemsList: updatedCartList},\n      this.addCartListToLocalStorage,\n    )\n  }\n\n  updateCartValue = () => {\n    this.setState({orderTotal: getCartValue()})\n  }\n\n  clearCart = () => {\n    const {cartItemsList} = this.state\n    const orderPlacedAt = format(new Date(), 'MMM dd yyyy,p').toString()\n    const updateOrderListWithDate = [cartItemsList, orderPlacedAt]\n    const previousOrder =\n      JSON.parse(localStorage.getItem('previousOrder')) === null\n        ? []\n        : JSON.parse(localStorage.getItem('previousOrder'))\n    const updatedPreviousOrderList = [...previousOrder, updateOrderListWithDate]\n    localStorage.setItem(\n      'previousOrder',\n      JSON.stringify(updatedPreviousOrderList),\n    )\n    localStorage.removeItem('cartData')\n    this.setState({displayPayment: true})\n  }\n\n  render() {\n    const {cartItemsList, orderTotal, displayPayment} = this.state\n\n    let isCartEmpty = null\n    if (cartItemsList.length > 0) {\n      isCartEmpty = false\n    } else {\n      isCartEmpty = true\n    }\n    return (\n      <div className=\"rest-cart-container\">\n        <Header />\n        {displayPayment ? (\n          <Payment />\n        ) : (\n          <div className=\"rest-cart-items-container\">\n            {isCartEmpty ? (\n              <div className=\"rest-empty-cart-container\">\n                <img\n                  alt=\"empty cart\"\n                  className=\"rest-empty-cart-img\"\n                  src=\"https://res.cloudinary.com/hariy/image/upload/v1642997774/TastyKitchen/cooking_1_lpi3li.png\"\n                />\n                <div className=\"rest-empty-cart-desc-container\">\n                  <h1 className=\"rest-empty-cart-title\">No Order Yet!</h1>\n                  <p className=\"rest-empty-cart-desc\">\n                    Your cart is empty. Add something from the menu.\n                  </p>\n                  <Link className=\"rest-empty-cart-link\" to=\"/\">\n                    <button className=\"rest-empty-cart-button\" type=\"button\">\n                      Order Now\n                    </button>\n                  </Link>\n                </div>\n              </div>\n            ) : (\n              <div className=\"rest-cart-items-desktop-container\">\n                <div className=\"rest-cart-items-desk-table-header-container\">\n                  <p className=\"rest-cart-items-desk-table-header  item\">\n                    Item\n                  </p>\n                  <p className=\"rest-cart-items-desk-table-header\">Quantity</p>\n                  <p className=\"rest-cart-items-desk-table-header\">Price</p>\n                </div>\n                <div>\n                  <ul className=\"rest-cart-item-desktop-ul\">\n                    {cartItemsList.map(eachItem => (\n                      <CartItems\n                        key={eachItem.id}\n                        itemDetails={eachItem}\n                        updateCartListState={this.updateCartListState}\n                        updateCartValue={this.updateCartValue}\n                      />\n                    ))}\n                  </ul>\n                  <hr className=\"rest-cart-item-desk-hr-line\" />\n                  <div className=\"rest-cart-desk-total-container\">\n                    <h1 className=\"rest-cont-item-desk-total-title\">\n                      Order Total:\n                    </h1>\n                    <div>\n                      <p\n                        className=\"cart-items-desk-total-cost\"\n                        testid=\"total-price\"\n                      >\n                        ₹{orderTotal}.00\n                      </p>\n                      <button\n                        onClick={this.clearCart}\n                        type=\"button\"\n                        className=\"cart-item-place-order-button\"\n                      >\n                        Place Order\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Cart\n","import {AiFillStar} from 'react-icons/ai'\nimport './index.css'\n\nconst RestaurantMenuBanner = props => {\n  const {restaurantDetails} = props\n  const {\n    imageUrl,\n    costForTwo,\n    cuisine,\n    location,\n    name,\n    rating,\n    reviewsCount,\n  } = restaurantDetails\n\n  let userReviewCount = null\n\n  switch (true) {\n    case reviewsCount < 100:\n      userReviewCount = Math.round(reviewsCount / 10) * 10\n      break\n    case reviewsCount < 1000:\n      userReviewCount = Math.round(reviewsCount / 100) * 100\n      break\n    case reviewsCount < 10000:\n      userReviewCount = Math.round(reviewsCount / 1000) * 1000\n      break\n    case reviewsCount < 100000:\n      userReviewCount = Math.round(reviewsCount / 10000) * 10000\n      break\n    case reviewsCount < 1000000:\n      userReviewCount = Math.round(reviewsCount / 100000) * 100000\n      break\n\n    default:\n      break\n  }\n\n  return (\n    <div className=\"rest-menu-rest-detail-container\">\n      <div className=\"rest-menu-rest-img-cont\">\n        <img\n          src={imageUrl}\n          alt=\"restaurant\"\n          className=\"rest-menu-mobile-rest-image\"\n        />\n        <img\n          src={imageUrl}\n          alt=\"restaurant\"\n          className=\"rest-menu-desktop-rest-image\"\n        />\n      </div>\n      <div className=\"rest-menu-detail-container\">\n        <h1 className=\"rest-menu-title\">{name}</h1>\n        <p className=\"rest-menu-cuisine\">{cuisine}</p>\n        <p className=\"rest-menu-location\">{location}</p>\n        <div className=\"rest-menu-detail-rating-review-container\">\n          <div className=\"rest-menu-rating-review-container\">\n            <div className=\"rest-menu-rating-container\">\n              <AiFillStar className=\"rest-menu-star-icon\" />\n              <p className=\"rest-menu-star-rating\">{rating}</p>\n            </div>\n            <p className=\"rest-menu-user-rating\">{`${userReviewCount}+ Ratings`}</p>\n          </div>\n          <hr className=\"rest-menu-cont\" />\n          <div className=\"rest-cost-container\">\n            <p className=\"rest-menu-cost\">{`₹ ${costForTwo}`}</p>\n            <p className=\"rest-menu-cost-for\">Cost for two</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RestaurantMenuBanner\n","import {Component} from 'react'\nimport './index.css'\n\nimport {AiFillStar, AiOutlineMinus, AiOutlinePlus} from 'react-icons/ai'\n\nclass RestaurantMenuList extends Component {\n  state = {quantity: 0}\n\n  componentDidMount = () => {\n    const {cartList, details} = this.props\n    cartList.map(eachItem => {\n      if (eachItem.id === details.id) {\n        return this.setState({quantity: eachItem.quantity})\n      }\n      return 0\n    })\n  }\n\n  addItemTocart = () => {\n    const {details, onClickAddToCart} = this.props\n    this.setState({quantity: 1})\n    onClickAddToCart({...details, quantity: 1})\n  }\n\n  updateCartList = () => {\n    const {quantity} = this.state\n    const {cartList, details, updateCartListState} = this.props\n    const newList = cartList.filter(eachItem => eachItem.id !== details.id)\n    const itemQuantityToUpdate = cartList.filter(\n      eachItem => eachItem.id === details.id,\n    )\n    const updateItemQuantity = {...itemQuantityToUpdate[0], quantity}\n    const updatedCartList =\n      updateItemQuantity.quantity === 0\n        ? [...newList]\n        : [...newList, updateItemQuantity]\n    updateCartListState(updatedCartList)\n  }\n\n  onClickDeleteQuantity = () => {\n    this.setState(\n      prevState => ({quantity: prevState.quantity - 1}),\n      this.updateCartList,\n    )\n  }\n\n  onClickIncreaseQuantity = () => {\n    this.setState(\n      prevState => ({quantity: prevState.quantity + 1}),\n      this.updateCartList,\n    )\n  }\n\n  render() {\n    const {details, cartList} = this.props\n    const itemInCart = cartList.filter(eachItem => eachItem.id === details.id)\n    const isItemInCart = itemInCart.length > 0\n    const {quantity} = this.state\n\n    return (\n      <li testid=\"foodItem\" className=\"rest-menu-list-items-li\">\n        <img\n          src={details.imageUrl}\n          alt=\"foodItem\"\n          className=\"restaurent-menu-list-images\"\n        />\n        <div className=\"rest-menu-li-item-details-cont\">\n          <h1 className=\"rest-menu-li-item-name\">{details.name}</h1>\n          <p className=\"rest-menu-li-items-cost\">{`₹ ${details.cost}.00`}</p>\n          <div className=\"rest-menu-li-items-rating-cont\">\n            <AiFillStar className=\"rest-menu-li-items-rating-icon\" />\n            <p className=\"rest-menu-li-items-rating-label\">{details.rating}</p>\n          </div>\n          {isItemInCart ? (\n            <div>\n              <button\n                onClick={this.onClickDeleteQuantity}\n                type=\"button\"\n                testid=\"decrement-count\"\n                className=\"cart-items-li-button\"\n              >\n                <AiOutlineMinus className=\"cart-items-li-button-icons\" />\n              </button>\n              <span className=\"cart-items-li-quantity\" testid=\"active-count\">\n                {quantity}\n              </span>\n              <button\n                onClick={this.onClickIncreaseQuantity}\n                type=\"button\"\n                testid=\"increment-count\"\n                className=\"cart-items-li-button\"\n              >\n                <AiOutlinePlus className=\"cart-items-li-button-icons\" />\n              </button>\n            </div>\n          ) : (\n            <button\n              type=\"button\"\n              onClick={this.addItemTocart}\n              className=\"rest-menu-li-items-button\"\n            >\n              Add\n            </button>\n          )}\n        </div>\n      </li>\n    )\n  }\n}\n\nexport default RestaurantMenuList\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\nimport Footer from '../Footer'\n\nimport RestaurantMenuBanner from '../RestaurantMenuBanner'\nimport RestaurantMenuList from '../RestaurantMenuList'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nconst getCartlistFromLocalStorage = () => {\n  const localStorageCartList =\n    JSON.parse(localStorage.getItem('cartData')) === null\n      ? []\n      : JSON.parse(localStorage.getItem('cartData'))\n  return localStorageCartList\n}\n\nclass RestaurantMenu extends Component {\n  state = {\n    apiStatus: apiStatusConstants.initial,\n    restaurantDetails: [],\n    foodItems: [],\n    cartItemsList: getCartlistFromLocalStorage(),\n  }\n\n  componentDidMount = () => {\n    this.getRestaurantMenu()\n  }\n\n  getRestaurantMenu = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = `https://apis.ccbp.in/restaurants-list/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    if (response.ok) {\n      const fetchedData = await response.json()\n      const restaurantDetails = {\n        costForTwo: fetchedData.cost_for_two,\n        cuisine: fetchedData.cuisine,\n        id: fetchedData.id,\n        imageUrl: fetchedData.image_url,\n        itemsCount: fetchedData.items_count,\n        location: fetchedData.location,\n        name: fetchedData.name,\n        opensAt: fetchedData.opens_at,\n        rating: fetchedData.rating,\n        reviewsCount: fetchedData.reviews_count,\n      }\n      const foodItems = fetchedData.food_items.map(eachItem => ({\n        cost: eachItem.cost,\n        foodType: eachItem.food_type,\n        id: eachItem.id,\n        imageUrl: eachItem.image_url,\n        name: eachItem.name,\n        rating: eachItem.rating,\n      }))\n\n      this.setState({\n        foodItems,\n        restaurantDetails,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  addCartListToLocalStorage = () => {\n    const {cartItemsList} = this.state\n    localStorage.setItem('cartData', JSON.stringify(cartItemsList))\n  }\n\n  updateCartListState = updatedCartList => {\n    this.setState(\n      {cartItemsList: updatedCartList},\n      this.addCartListToLocalStorage,\n    )\n  }\n\n  onClickAddToCart = newItem => {\n    this.setState(\n      prevState => ({cartItemsList: [...prevState.cartItemsList, newItem]}),\n      this.addCartListToLocalStorage,\n    )\n  }\n\n  renderRestaurantDetailsMenu = () => {\n    const {restaurantDetails, foodItems, cartItemsList} = this.state\n\n    return (\n      <div className=\"rest-menu-container\">\n        <RestaurantMenuBanner restaurantDetails={restaurantDetails} />\n        <ul className=\"rest-menu-items-list\">\n          {foodItems.map(eachItem => (\n            <RestaurantMenuList\n              key={eachItem.id}\n              details={eachItem}\n              cartList={cartItemsList}\n              onClickAddToCart={this.onClickAddToCart}\n              updateCartListState={this.updateCartListState}\n            />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderLoadingView = () => (\n    <div\n      className=\"products-loader-container loader\"\n      testid=\"restaurant-details-loader\"\n    >\n      <Loader type=\"Oval\" color=\"#f7931e\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = () => <h1>sadf</h1>\n\n  renderRestaurantDetails = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderRestaurantDetailsMenu()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        {this.renderRestaurantDetails()}\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default RestaurantMenu\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst NotFound = () => (\n  <div className=\"rest-page-not-found-container\">\n    <img\n      src=\"https://res.cloudinary.com/hariy/image/upload/v1643000704/TastyKitchen/erroring_1_xijm9n.png\"\n      alt=\"not found\"\n    />\n    <div className=\"rest-page-not-found-desc-container\">\n      <h1 className=\"rest-page-not-found-title\">Page Not Found</h1>\n      <p className=\"rest-page-not-found-desc\">\n        We are sorry, the page you requested could not be found. Please go back\n        to the homepage\n      </p>\n      <Link to=\"/\" className=\"rest-page-not-found-link\">\n        <button type=\"button\" className=\"rest-page-not-found-button\">\n          Home Page\n        </button>\n      </Link>\n    </div>\n  </div>\n)\n\nexport default NotFound\n","import './index.css'\n\nconst OrderedItems = props => {\n  const {itemDetails} = props\n\n  return (\n    <>\n      <li className=\"ordered-items-mobile-li\">\n        <div>\n          <img\n            src={itemDetails.imageUrl}\n            className=\"ordered-items-li-image\"\n            alt=\"ordered-items\"\n          />\n          <div className=\"ordered-items-li-details-container\">\n            <h1 className=\"ordered-items-li-name\">{itemDetails.name}</h1>\n            <div className=\"ordered-item-quantity-cost-container\">\n              <p className=\"ordered-items-li-cost\">{`Quantity: ${itemDetails.quantity}`}</p>\n              <p className=\"ordered-items-li-cost\">\n                Cost: ₹ {`${itemDetails.cost * itemDetails.quantity}/-`}\n              </p>\n            </div>\n          </div>\n        </div>\n      </li>\n    </>\n  )\n}\n\nexport default OrderedItems\n","import {Link} from 'react-router-dom'\n\nconst NoOrders = () => (\n  <div className=\"rest-empty-cart-container\">\n    <img\n      alt=\"empty cart\"\n      className=\"rest-empty-cart-img\"\n      src=\"https://res.cloudinary.com/hariy/image/upload/v1642997774/TastyKitchen/cooking_1_lpi3li.png\"\n    />\n    <div className=\"rest-empty-cart-desc-container\">\n      <h1 className=\"rest-empty-cart-title\">No Order Yet!</h1>\n      <p className=\"rest-empty-cart-desc\">\n        You havent ordered with us. Order from your favourite restaurants.\n      </p>\n      <Link className=\"rest-empty-cart-link\" to=\"/\">\n        <button className=\"rest-empty-cart-button\" type=\"button\">\n          Order Now\n        </button>\n      </Link>\n    </div>\n  </div>\n)\n\nexport default NoOrders\n","import {Component} from 'react'\nimport {v4 as uuidV4} from 'uuid'\nimport {BiRupee} from 'react-icons/bi'\nimport {AiFillCheckCircle} from 'react-icons/ai'\nimport Header from '../Header'\nimport Footer from '../Footer'\nimport OrderedItems from '../OrderedItems'\nimport NoOrders from '../NoOrders'\nimport './index.css'\n\nconst userDetailsFromLS = () => JSON.parse(localStorage.getItem('userDetails'))\nconst pastOrdersFromLS = () =>\n  JSON.parse(localStorage.getItem('previousOrder')) === null\n    ? []\n    : JSON.parse(localStorage.getItem('previousOrder')).reverse()\n\nconst userSavedAddressFromLs = () =>\n  JSON.parse(localStorage.getItem('userSavedAddress')) === null\n    ? 'Save your Address'\n    : JSON.parse(localStorage.getItem('userSavedAddress')).address\n\nclass Account extends Component {\n  state = {userDetails: [], address: '', pastOrders: [], editAddress: false}\n\n  componentDidMount = () => {\n    this.setState({\n      userDetails: userDetailsFromLS(),\n      pastOrders: pastOrdersFromLS(),\n      address: userSavedAddressFromLs(),\n    })\n  }\n\n  onClickEditAddress = () => {\n    this.setState({editAddress: true})\n  }\n\n  onChangeUserAddress = event => {\n    this.setState({address: event.target.value})\n  }\n\n  saveUserAddressToLs = () => {\n    const {address} = this.state\n    const updateAddress = {address}\n    localStorage.setItem('userSavedAddress', JSON.stringify(updateAddress))\n  }\n\n  onSaveUserAddress = event => {\n    event.preventDefault()\n    this.setState({editAddress: false})\n    this.saveUserAddressToLs()\n  }\n\n  editUserAddress = () => {\n    const {address} = this.state\n\n    return (\n      <form type=\"submit\" onSubmit={this.onSaveUserAddress}>\n        <textarea\n          id=\"address\"\n          rows=\"5\"\n          cols=\"50\"\n          value={address}\n          onChange={this.onChangeUserAddress}\n          className=\"account-address-text-area\"\n        >\n          {address}\n        </textarea>\n        <button className=\"account-address-edit-button\" type=\"submit\">\n          Save\n        </button>\n      </form>\n    )\n  }\n\n  render() {\n    const {userDetails, pastOrders, editAddress, address} = this.state\n    const {username} = userDetails\n\n    return (\n      <div className=\"account-container\">\n        <Header />\n        <div className=\"user-details-container\">\n          <p className=\"account-user-name-label\">{`User name: ${username}`}</p>\n          <div className=\"account-address-container\">\n            <p className=\"account-user-address-label\">Address:</p>\n            {editAddress ? (\n              this.editUserAddress()\n            ) : (\n              <>\n                <p className=\"account-user-address\">{address}</p>\n                <button\n                  onClick={this.onClickEditAddress}\n                  className=\"account-address-edit-button\"\n                  type=\"button\"\n                >\n                  Edit address\n                </button>\n              </>\n            )}\n          </div>\n          <div>\n            {pastOrders.length > 0 ? (\n              <div className=\"account-past-orders-container\">\n                <p className=\"account-user-past-orders-label\">Past Orders</p>\n                <ul className=\"ordered-items-ul\">\n                  {pastOrders.map(eachOrder => {\n                    let totalCartCost = 0\n\n                    return (\n                      <div key={uuidV4()} className=\"ordered-item-container\">\n                        <div className=\"account-ordered-at-deliver-cont\">\n                          <div>\n                            <p\n                              key={uuidV4()}\n                              className=\"account-ordered-at-label\"\n                            >\n                              Ordered at:\n                            </p>\n                            <p\n                              key={uuidV4()}\n                              className=\"account-ordered-at-label\"\n                            >\n                              {eachOrder[1]}\n                            </p>\n                          </div>\n                          <p\n                            key={uuidV4()}\n                            className=\"account-order-delivered-cost\"\n                          >\n                            Delivered\n                            <AiFillCheckCircle className=\"account-delivered-icon\" />\n                          </p>\n                        </div>\n                        <div className=\"ordered-items-wrap-container\">\n                          {eachOrder[0].map(eachOrderItem => {\n                            totalCartCost +=\n                              eachOrderItem.cost * eachOrderItem.quantity\n                            return (\n                              <OrderedItems\n                                key={eachOrderItem.id}\n                                itemDetails={eachOrderItem}\n                              />\n                            )\n                          })}\n                        </div>\n                        <div className=\"account-order-total-container\">\n                          <h1 className=\"account-order-total-label\">\n                            Order Total:\n                          </h1>\n                          <div>\n                            <p\n                              key={totalCartCost}\n                              className=\"account-order-total-cost\"\n                            >\n                              <BiRupee />\n                              {totalCartCost}/-\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    )\n                  })}\n                </ul>\n              </div>\n            ) : (\n              <NoOrders />\n            )}\n          </div>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Account\n","import './App.css'\nimport {withRouter, Route, Switch, Redirect} from 'react-router-dom'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport LoginForm from './components/LoginForm'\nimport Home from './components/Home'\nimport Cart from './components/Cart'\nimport RestaurantMenu from './components/RestaurantMenu'\nimport NotFound from './components/NotFound'\nimport Account from './components/Account'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={LoginForm} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/cart\" component={Cart} />\n    <ProtectedRoute exact path=\"/restaurant/:id\" component={RestaurantMenu} />\n    <ProtectedRoute exact path=\"/account\" component={Account} />\n    <Route path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"/not-found\" />\n  </Switch>\n)\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}